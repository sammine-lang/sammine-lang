
# .github/workflows/clang-tidy.yml
name: "Ubuntu"


on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Install LLVM/Clang, Catch2, mold and libtinfo5
        run: |
          wget http://security.ubuntu.com/ubuntu/pool/universe/n/ncurses/libtinfo5_6.3-2ubuntu0.1_amd64.deb

          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18 
          sudo apt update
          sudo apt install -y clang-tidy catch2 mold 
          sudo apt install ./libtinfo5_6.3-2ubuntu0.1_amd64.deb

      - name: Configure codebase 
        run: |
          mkdir -p build
          cmake -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_LINKER_TYPE=MOLD -DSAMMINE_TEST=ON -DLLVM_DIR=/usr/lib/llvm-18/lib/cmake/llvm/
          # -DCMAKE_C_COMPILER=clang-18 -DCMAKE_CXX_COMPILER=clang++-18 -DCMAKE_CXX_SCAN_FOR_MODULES=OFF   -DCMAKE_GENERATOR=Ninja 

      - name: Build codebase
        run: |
          cmake --build build -j4 

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install lit and filecheck
        run: pip install lit filecheck

      - name: Test codebase
        run: |
          cmake --build build -j4 --target unit-tests e2e-tests

      - name: Run clang-tidy
        run: |
          # commented lines are debug tools, please dont remove
          # pwd 
          # ls -R
          # ln -s ./build/compile_commands.json ./  # linking
          # You can adjust -j <cores> or other flags as needed
          run-clang-tidy -j 4 -p build -use-color -warnings-as-errors "\*" "sammine-lang\/(src|include).\*"


